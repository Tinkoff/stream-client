name: Pull request checks

on:
  pull_request:
    branches: [ develop ]

jobs:
  build-n-test:
    name: ${{ matrix.os }}-${{ matrix.build-type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build-type: [Tsan, Asan, Ubsan, Debug]
    steps:
    - uses: actions/checkout@v2
    # Install dependencies
    - name: Install dependencies on ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -yq lcov clang-format clang-tidy libboost-dev libboost-system-dev
    - name: Install dependencies on macos
      if: runner.os == 'macOS'
      run: |
        brew install boost
        ln -s "$(brew --prefix llvm)/bin/clang-format" "/usr/local/bin/clang-format"
        ln -s "$(brew --prefix llvm)/bin/clang-tidy" "/usr/local/bin/clang-tidy"
        brew install openssl
    # Run tests with proper build type
    - name: Test
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      run: .github/workflows/run.sh test-type $BUILD_TYPE
    # Lint code
    - name: Lint
      if: matrix.build-type == 'Debug'
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      run: .github/workflows/run.sh lint build-$BUILD_TYPE
    # Calculate coverage
    - name: Collect coverage
      if: runner.os == 'Linux' && matrix.build-type == 'Debug'
      run: .github/workflows/run.sh collect-coverage build-Debug
    # Report coverage
    - name: Report coverage
      if: runner.os == 'Linux' && matrix.build-type == 'Debug'
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.info
